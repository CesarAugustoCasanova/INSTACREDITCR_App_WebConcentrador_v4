var map, V_Ubicacion, V_Destino, markers = [], markersC = [], Colores = [], CreditosAsigna = [], indice = 0, borra = 0; function initMap() { $("#Monitoreo").removeClass("w3-hide"), map = new google.maps.Map(document.getElementById("map"), { zoom: 5, center: { lat: 19.508194, lng: -99.143493 } }) } var RutaDeUsuario, accion, Baseiconos = "https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=|", Icono = { 0: { icon: Baseiconos + "ImgDotGreen_sm.png", color: Baseiconos + "229954" }, 1: { icon: Baseiconos + "ImgDotYellow_sm.png", color: Baseiconos + "ffee51" }, 2: { icon: Baseiconos + "ImgDotRed_sm.png", color: Baseiconos + "FF4000" }, 3: { icon: Baseiconos + "ImgDotGray_sm.png", color: Baseiconos + "afafaf" } }, timerMonitoreo = 0, symbolThree = { path: "M-2,2 L0,-8 L2,2", strokeColor: "#000", strokeWeight: .5 }; function DibujaRuta(e) { let a = [], o = new google.maps.LatLngBounds; e.forEach(e=> { let t = parseFloat(e.Latitud), s = parseFloat(e.Longitud); a.push({ lat: t, lng: s }), o.extend(new google.maps.LatLng(t, s)) }); try { RutaDeUsuario.setMap(null) } catch (e) { } RutaDeUsuario = new google.maps.Polyline({ path: a, icons: [{ icon: symbolThree, offset: "50%" }], strokeWeight: 1, map: map }), map.fitBounds(o) } function Obtener() { try { void 0 === map && initMap(); try { RutaDeUsuario.setMap(null) } catch (e) { } hideInfoUser(); var e = document.getElementById("ContentPlaceHolder1_HidenUrs").value; $.ajax({ type: "POST", url: "MonitoreoUsuarios.aspx/ObtenerMonitoreo", data: "{'V_Usuario':'" + RcbCat_lo_usuario.Get_CheckedValues() + "','V_solicitante':'" + e + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { OnSuccess(e.d) }, failure: function (e) { ShowPopup(e) }, error: function (e) { ShowPopup(e) } }) } catch (e) { } } function Obtener3() { try { void 0 === map && initMap(), RcbCat_lo_usuario.get_checkedItems.length > 1 && ShowPopup("Las rutas solo se pueden ver para un usuario a la vez"), hideInfoUser(), $.ajax({ type: "POST", url: "MonitoreoUsuarios.aspx/ObtenerRuta", data: "{'V_Usuario':'" + RcbCat_lo_usuario.Get_CheckedValues() + "','V_Fecha':'" + dtPicker.FormattedDate() + "'}", contentType: "application/json; charset=utf-8", dataType: "json", success: function (e) { OnSuccess3(e.d) }, failure: function (e) { ShowPopup(e) }, error: function (e) { ShowPopup(e) } }) } catch (e) { } } function addMarker(e) { var a, o = new google.maps.LatLngBounds, t = e.length, s = ""; e.forEach(e=> { switch (e.Accion) { case 0: a = "./Images/Esperando_gestion.png", accion = "Esperando Gestion"; break; case 1: a = "./Images/Salida.png", accion = "Salida"; break; case 2: a = "./Images/Comida.png", accion = "Pausa Comida"; break; case 3: a = "./Images/Banio.png", accion = "Pausa Descanso"; break; case 4: a = "./Images/LLuvia.png", accion = "Pausa Lluvia"; break; case 5: a = "./Images/Gasolina.png", accion = "Pausa Gasolina"; break; case 6: a = "./Images/Falla_mecanica.png", accion = "Pausa Falla mecanica"; break; case -1: a = "./Images/Rumbo_gestionar.png", accion = "Rumbo a gestionar"; break; case -2: a = "./Images/Gestionando.png", accion = "Gestionando" } var t = new google.maps.LatLng(e.Latitud, e.Longitud); if ("on" == $("#switch1:checked").val()) n = new google.maps.Marker({ position: t, map: map, icon: a, label: { text: e.Usuario + " (Bateria: " + e.Bateria + ")", fontFamily: "custom-label" } }); else var n = new google.maps.Marker({ position: t, map: map, icon: a }); try { markers.push(n), o.extend(n.position) } catch (e) { alert(e.message) } var i = e.Credito.split("-"); s = "<table class='table table-hover table-bordered shadow'>" + `<tr class='bg-primary text-white'><th colspan='2' class='text-center'>Información de ${e.Usuario}</th></tr>` + `<tr><td>Último estado</td><td>${accion}</td></tr>` + `<tr><td>Velocidad de movimiento</td><td>${e.Velocidad}</td></tr>` + `<tr><td>Bateria</td><td>${e.Bateria}</td></tr>` + "<tr><td colspan='2' class='text-center bg-info text-white'><b>Última gestión</b></td></tr>" + `<tr><td>Fecha</td><td>${e.Fecha}</td></tr>` + `<tr><td>Credito</td><td>${i[0]}</td></tr>` + `<tr><td>Resultado</td><td>${e.Resultado}</td></tr>` + "</table > ", google.maps.event.addListener(n, "click", function (e, a, o) { return function () { showInfoUser(), $("#InfoUser").html(a); let t = e.getPosition(); map.panTo(t), map.setZoom(18), RcbCat_lo_usuario.get_checkedItems().forEach(e=>e.set_checked(!1)), RcbCat_lo_usuario.findItemByText(o).set_checked(!0), dtPicker.set_enabled(!0) } }(n, s, e.Usuario)), n.setMap(map) }), map.fitBounds(o), 1 == t && (showInfoUser(), $("#InfoUser").html(s)) } function addMarker3(e) { var a, o, t = 0; for (x = 0; x < e.length; x++) if (" " != e[x].Resultado) { "EFECTIVO" == e[x].Efectivo ? (a = "./Images/BanderaVerde.png", o = "#2CCC27") : "NO EFECTIVO" == e[x].Efectivo ? (a = "./Images/BanderaRosa.png", o = "#C74790") : "PUNTO" == e[x].Efectivo && (a = "./Images/imgObjetivo.png", o = "#222222"); var s = new google.maps.LatLng(e[x].Latitud, e[x].Longitud), n = new google.maps.Marker({ position: s, map: map, icon: { url: a, labelOrigin: new google.maps.Point(40, 52) }, label: { text: t + " | " + e[x].Resultado, color: o } }); try { markers.push(n) } catch (e) { alert(e.message) } n.setMap(map), t++ } } function addMarker4(e, a) { new google.maps.LatLngBounds; try { var o = (info[x].Latitud - info[x + 1].Latitud) / (info[x].Longitud - info[x + 1].Longitud), t = Math.atan(o) } catch (e) { } var s = { path: "M29.395,0H17.636c-3.117,0-5.643,3.467-5.643,6.584v34.804c0,3.116,2.526,5.644,5.643,5.644h11.759   c3.116,0,5.644-2.527,5.644-5.644V6.584C35.037,3.467,32.511,0,29.395,0z M34.05,14.188v11.665l-2.729,0.351v-4.806L34.05,14.188z    M32.618,10.773c-1.016,3.9-2.219,8.51-2.219,8.51H16.631l-2.222-8.51C14.41,10.773,23.293,7.755,32.618,10.773z M15.741,21.713   v4.492l-2.73-0.349V14.502L15.741,21.713z M13.011,37.938V27.579l2.73,0.343v8.196L13.011,37.938z M14.568,40.882l2.218-3.336   h13.771l2.219,3.336H14.568z M31.321,35.805v-7.872l2.729-0.355v10.048L31.321,35.805", scale: .4, fillColor: "#427af4", fillOpacity: 1, strokeWeight: 1, anchor: new google.maps.Point(0, 5), rotation: t }, n = new google.maps.LatLng(e[indice].Latitud, e[indice].Longitud), i = new google.maps.Marker({ position: n, map: map, icon: s }); try { markersC.push(i) } catch (e) { alert(e.message) } indice < e.length ? (i.setMap(map), console.log("Esta " + indice + " es " + (markers.length - 1)), 0 == indice && map.setCenter(n), indice++) : indice = 0 } function restMarker() { markersC[markersC.length - 1].setMap(null), console.log("Se fue " + (markers.length - 1)) } function OnSuccess(e) { if ("0" == e) ShowPopup("No Se Localizo El Dispositivo"); else { var a = JSON.parse(e); LimpiarMarcadores(map), addMarker(a), $("[style*='custom-label']").addClass("badge badge-info"), timerMonitoreo = setTimeout(Obtener, 25e3) } } function OnSuccess2(e) { if ("No se encontraron cuentas" == e) $("#MdlEspere").modal("hide"), ShowPopup(e); else { var a = JSON.parse(e); LimpiarMarcadores(map), addMarker2(a) } } function OnSuccess3(e) { try { clearTimeout(timerMonitoreo), timerMonitoreo = 0 } catch (e) { } if ("0" == e) ShowPopup("No se encontró monitoreo"); else { var a = JSON.parse(e); LimpiarMarcadores(map), DibujaRuta(a), addMarker3(a), indice = 0, markersC = [] } } function LimpiarMarcadores(e) { for (var a = 0; a < markers.length; a++) markers[a].setMap(null); markers = [] } function ShowPopup(e) { $("#MdlMsj").modal({ show: !0 }), document.getElementById("LblMsj").innerHTML = e } hideInfoUser = (() => { $("#InfoUser").hasClass("invisible") || $("#InfoUser").addClass("invisible"), $("#DivMapa").hasClass("col-md-8") && ($("#DivMapa").removeClass("col-md-8"), $("#DivMapa").addClass("col-md-12")), $("#InfoUser").html("") }), showInfoUser = (() => { $("#InfoUser").hasClass("invisible") && $("#InfoUser").removeClass("invisible"), $("#DivMapa").hasClass("col-md-12") && ($("#DivMapa").removeClass("col-md-12"), $("#DivMapa").addClass("col-md-8")) }), comboCheckedChanged = ((e, a) => { let o = RcbCat_lo_usuario.get_checkedItems().length; 0 == o ? (dtPicker.set_enabled(!1), btnObtener.set_enabled(!1)) : 1 == o ? (dtPicker.set_enabled(!0), btnObtener.set_enabled(!0)) : (btnObtener.set_enabled(!0), dtPicker.set_enabled(!1), btnRuta.set_enabled(!1)) }), selectedDate = ((e, a) => { dtPicker.isEmpty() ? btnRuta.set_enabled(!1) : btnRuta.set_enabled(!0) });